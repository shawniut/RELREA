

<div class ="page-title">
	<a class="title-text"><%=@Project.name%>::Readiness Analysis</a>
</div>
<p class ="title-text" > Select Release:
		<%=select_tag 'release_ids', options_for_select(@Project.releases.reverse.collect{ |r| [r.name, r.id] }),{:onchange => "loadDashboard(this)"}%>
		Moving average Order:
		<%=select_tag 'moving_average_ids', options_for_select([[3,3],[4,4],[5,5],[6,6],[7,7],[8,8]] ),{:onchange => "loadDashboard(this)"}%>
</p>
<div id="readiness-analysis">

</div>

<div id="bottlenec-analysis">

</div>

<div id="attribute-analysis">

</div>


<script type="text/javascript">

	$(function(){

	document.getElementById("release_ids").selectedIndex = <%=@selected_index.to_i%>;
	document.getElementById("moving_average_ids").selectedIndex = <%= @moving_average_index.to_i%>;
});

$(function(){

		<% get_all_series_data @Project, @average_data, @optimistic_data, @pessimistic_data, @Release %>
		<% moving_average_series_data = get_moving_average_series @average_data,  @moving_average_order %>
		
		var time_interval = <%=@average_data[1][0]-@average_data[0][0]%>;

		var average_data = check_deviation_with_moving_average_and_formate_readiness_series(<%=@average_data%>, <%=moving_average_series_data%>, <%=@moving_average_order %>);



		createReadinessWithMovingAverage("readiness-analysis",average_data,
			<%=moving_average_series_data%>,"Readiness Over Time",time_interval);
		// <% if @Release.name == 'next'%>
		// 	$("#cr-text").html("CR: <%=@average_data[@average_data.length-1][1]%>");
		// 	$("#pr-text").html("PR: <%= (get_projected_series @average_data, (@Project.info.next_release_date-@Release.start_date).to_i)[1][1] %>");
		// <%else%>
		// 	$("#cr-text").html("CR: <%=@average_data[@average_data.length-1][1]%>");
		// 	$("#pr-text").html("PR: N/A");
		// <%end%>
});

function check_deviation_with_moving_average_and_formate_readiness_series(readiness_data, moving_average_data, k){
		var i = 0
		for(i=0; i<moving_average_data.length-2;i++){
			if (readiness_data[k+i][1] < moving_average_data[i][1]){
				readiness_data[k+i] = {x:readiness_data[k+i][0], y:readiness_data[k+i][1] , color: 'red'}
			}
		}
		return readiness_data
	end
}

function createReadinessWithMovingAverage(container, average_data, moving_average_data, chart_title, t_interval){
	
	chart = new Highcharts.Chart({
		chart: {
                renderTo: container,
                 zoomType: 'x'
        },
		title: {
                text: chart_title,
                x: -20 //center
        },
	    xAxis: {
	    	title: {
                    text:"Development Time (days)"
                },
	       tickInterval:7,

	    },
	    
	    yAxis: {
	    	title: {
                    text:"Readiness"
                },
	        max: 1,
	        min:0
	    },

	    series: [{
	    	color: '#31B404',
	    	name: 'Actual Readiness',
	        data:average_data  
	    },{
	    	color: '#8181F7',
	    	name: 'Moving Average',
	        data:moving_average_data  
	    }],

	    legend: {
            enabled:true    
        },

         plotOptions: {
                series: {
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function (e) {
                

                            	$.ajax({
                            		type: "POST",
                            		url: "/analysis/"+<%=@Project.id%>+"/load_attribute_satisfaction",
                            		data: { days: e.point.x,
                            				series_name: this.series.name,
                            				release_id: document.getElementById("release_ids").options[document.getElementById("release_ids").selectedIndex].value,
                            				moving_average_id: document.getElementById("moving_average_ids").options[document.getElementById("moving_average_ids").selectedIndex].value,
                            				interval:t_interval,
                            				moving_average_data:moving_average_data
                            		 }
                            	});
                               //alert("I am here"+ this.series);
                            }
                        }
                    },
                    marker: {
                        lineWidth: 1
                    }
                }
            },
	});
}

function loadDashboard(release_ids){
	$.ajax({
            type: "POST",
            url: "/analysis/"+<%=@Project.id%>+"/index",
            data: { 
                    release_id: document.getElementById("release_ids").options[document.getElementById("release_ids").selectedIndex].value,
                    moving_average_id: document.getElementById("moving_average_ids").options[document.getElementById("moving_average_ids").selectedIndex].value,
                    selected_index : document.getElementById("release_ids").selectedIndex,
                    moving_average_selected_index : document.getElementById("moving_average_ids").selectedIndex
            }
    });
}

</script>

