$(function(){

	//createAttributesMovingAverageChart("bottlenec-analysis", "Bottlenec Factor Analysis");
	<%order = @moving_average_order%>
	<%order =3 %>
	createAttributeSatisfactionSpiderWebChart("attribute-analysis", "Comparison of the current level of satisfaction with last 3 observation");
	<%@moving_average_data = get_all_series_data @Project, @average_data, @optimistic_data, @pessimistic_data, @release %>
	var overall_ma_data = <%=@moving_average_data%>;
	<%colors = ['#FF3300','#3333FF','#000099', '#663300','#0000FF','#E819E8','#FF6666','#9900FF']%>
	<%colors2 = ['#F79F81','#3333FF','#000099', '#663300','#0000FF','#E819E8','#FF6666','#9900FF']%>
			
			<%@days -= (order*@interval)%>
           
            //createAttributesImpactonOverallRRChart("impact-of-RR-attributes", "Individual attribute's impact on overall RR score upto <%=@days%> days", <%#=series_data%>);
            

			<%(1..order).each do |i|%>
				<%@days += @interval %>
				spiderWebChart.addSeries({
	            	name: "Sat(<%= (@release.start_date+@days.days).strftime("%b %d, %Y")%>)",
	            	color: "<%=raw colors[order-i]%>",
	            	data:<%=@Project.get_satisfaction_level_by_date @days.to_i, @release %>
	        	});
	        	        	
	       <%end%>


           
});



function identify_bottleneck_and_formate_readiness_series(overall_ma, attribute_ma){
		var i = 0;
		for(i=0; i<overall_ma.length;i++){
			if (attribute_ma[i][1] < overall_ma[i][1]){
				attribute_ma[i] = {x:attribute_ma[i][0], y:attribute_ma[i][1] , color: 'red'}
			}else{
				attribute_ma[i] = {x:attribute_ma[i][0], y:attribute_ma[i][1] , color: 'green'}
			}
		}
		return attribute_ma
	end
}


function createAttributeSatisfactionSpiderWebChart(container, title ){
	
		spiderWebChart = new Highcharts.Chart({
		chart: {
                renderTo: container,
                polar: true,
	        	type: 'line'
        },
		title: {
                text: title,
                x: -20 //center
        },

	    pane: {
	    	size: '80%'
	    },

	    xAxis: {
	        categories: <%= raw @Project.get_attributes_names.to_json %>,
	        tickmarkPlacement: 'on',
	        lineWidth: 0,
            labels: {
                style: {
                    color: '#000000',
                    fontWeight: 'bold'
                }
            }
	    },
	        
	    yAxis: {
	        gridLineInterpolation: 'polygon',
	        lineWidth: 0,
	        min: 0,
	        max: 1,
	        tickInterval:0.25,
	        plotBands: [{ // Light air
                    from: 0.0,
                    to: 0.25,
                    color: 'rgba(255, 51, 51, 0.3)'
                   
                    
                }, { // Light breeze
                    from: 0.25,
                    to: 0.5,
                    color: 'rgba(255, 255, 102, 0.3)'
                    
                },{ // Light breeze
                    from: 0.5,
                    to: 0.75,
                    color: 'rgba(128, 255, 0, 0.3)'
                    
                },{ // Light breeze
                    from: 0.75,
                    to: 1,
                    color: 'rgba(0, 153, 76, 0.3)'
                    
                }]

	    },
	    
	    tooltip: {
	    	
	    	shared: true,
	        //pointFormat: '<span style="color:{series.color}">{series.name}: <b>${point.y:,.0f}</b><br/>'
	    },
	    
	    legend: {
	       enabled:true    
	    }    
	
	});
}


function createAttributesMovingAverageChart(container, title){
	
	attributeMAchart = new Highcharts.Chart({
		chart: {
                renderTo: container,
                zoomType: 'x'
        },
		title: {
                text:title,
                x: -20 //center
        },
	    xAxis: {
	    	title: {
                    text:"Development Time (days)"
                },
	       tickInterval:7,

	    },    
	    yAxis: {
	    	title: {
                    text:"Readiness"
                },
	        max: 1,
	        min:0,
	        tickInterval:0.25
	    },
	    legend: {
            enabled:true    
        }
	});
}


function createAttributesImpactonOverallRRChart(container, title,  series_data ){
	
		chart2 = new Highcharts.Chart({
            chart: {
            	renderTo: container,
                
            },
            title: {
                text:title,
                 x: -20 //center
            },
           
            xAxis: {
                categories: <%= raw @Project.get_attributes_names.to_json %>,
            },
            yAxis:[{ // Primary yAxis
            labels: {
                format: '{value} % ',
            },
            title: {
                text: '% of ocuurance',
            },
            opposite: true

        }, { // Secondary yAxis
            gridLineWidth: 0,
            title: {
                text: 'Average deviation with overall readiness ',  
            },
            min: 0,
	        max: 1,
            labels: {
              format: '{value}',   
            }

        },],
            tooltip: {
                // headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                // pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                //     '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
                // footerFormat: '</table>',
                // shared: true,
                // useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
            	type: 'column',
            	yAxis: 1,
                name: 'Average negetive deviation',
                color:'red',
                data: series_data[0]
    
            }, {
            	type: 'column',
            	yAxis: 1,
                name: 'Average positive deviation',
                color: 'green',
                data:series_data[1]
    
            },
            {
            	type: 'column',
                name: 'Negetive deviation',
                //color:'red',
                data: series_data[2]
    
            }, {
            	type: 'column',
                name: 'Positive deviation',
                //color: 'green',
                data:series_data[3]
    
            }]
        });
}